//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/MasterInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MasterInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MasterInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MasterInput"",
    ""maps"": [
        {
            ""name"": ""Movement"",
            ""id"": ""7f4ffa02-7e0b-40e7-b8a2-e50a545724d0"",
            ""actions"": [
                {
                    ""name"": ""ForwardDown"",
                    ""type"": ""Button"",
                    ""id"": ""3a7a120d-9bcb-46e5-a6f7-aa9d430c9ec5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ForwardUp"",
                    ""type"": ""Button"",
                    ""id"": ""cfad8e85-53d2-4034-af6f-b95fad602d2a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BackwardDown"",
                    ""type"": ""Button"",
                    ""id"": ""ca86f04e-4291-4073-822e-688e6f341c7d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BackwardUp"",
                    ""type"": ""Button"",
                    ""id"": ""5556d967-0485-4e9e-b6a8-787e65311586"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftUp"",
                    ""type"": ""Button"",
                    ""id"": ""a62df03c-afba-41a8-bbb8-2129baef9404"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftDown"",
                    ""type"": ""Button"",
                    ""id"": ""4764021b-c0c0-4ce2-99bc-b08d76e77b79"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightDown"",
                    ""type"": ""Button"",
                    ""id"": ""8e2361c2-9410-4564-8e13-ac0720cb1b68"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightUp"",
                    ""type"": ""Button"",
                    ""id"": ""358bdc10-5964-46a5-aaaa-350d4bd8a308"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""24523bf1-f039-4612-acd4-2cc432f07d2d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84e7bb13-4d3e-4372-8c2e-a9d3294d8759"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ece3b26d-8ac5-41e8-b812-69d6b889b270"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackwardDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dde02dcf-fc9c-4487-94b0-d91ad3877d4f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackwardUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a46ca42-3166-4487-9d99-7ebaacec73c6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d2dc85a-14c4-4127-b788-a019311fff1a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29b6dbc5-6bec-4842-bafd-2b75806e8ce2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f9f27dd-85af-4afa-8b12-e6323f2c4593"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Mouse"",
            ""id"": ""1f37f863-d968-4fff-ba81-64096c776412"",
            ""actions"": [
                {
                    ""name"": ""delta"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8375ab30-93a7-4449-b083-dcc46be4e8de"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""rightClickDown"",
                    ""type"": ""Button"",
                    ""id"": ""35b093aa-a3fd-4a52-8bf3-85588d7281a4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""leftClickDown"",
                    ""type"": ""Button"",
                    ""id"": ""58892116-7c15-4577-a618-bb8817fc9618"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""leftClickUp"",
                    ""type"": ""Button"",
                    ""id"": ""3853797b-c8d0-4a01-a765-cb69bf32d050"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""rightClickUp"",
                    ""type"": ""Button"",
                    ""id"": ""cb742452-15fe-4645-8f35-e9074dcd1129"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""position"",
                    ""type"": ""Value"",
                    ""id"": ""3b564b5a-f7df-490e-994f-9d9be43be621"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1eae655d-326e-485f-995a-aeef8552dad4"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""delta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a63382d-f8e7-45b1-9ee0-c89580caae61"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""rightClickDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97643555-a50b-4273-9027-0c8fada0667b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""rightClickUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32033973-237f-42aa-be72-1d9ce0b39323"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""513b014f-8cfe-4fe4-8b08-dd46b4f9c216"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""leftClickDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13bb7b0e-dead-4e87-ae4c-d18f615a9c16"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""leftClickUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Misc"",
            ""id"": ""d88681cd-9db9-4cd2-8161-abebef3cfaec"",
            ""actions"": [
                {
                    ""name"": ""DevicePulse"",
                    ""type"": ""Button"",
                    ""id"": ""39ca9bbf-698f-41ef-b0b7-cfdc45c855c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""0a5f3d42-cb84-43a8-93e3-d1249326f10b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0e806b30-dd80-4e91-a1da-8a49bc86c2e6"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DevicePulse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad0c1b59-0ceb-4c9f-9fcb-1a302abd612f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Movement
        m_Movement = asset.FindActionMap("Movement", throwIfNotFound: true);
        m_Movement_ForwardDown = m_Movement.FindAction("ForwardDown", throwIfNotFound: true);
        m_Movement_ForwardUp = m_Movement.FindAction("ForwardUp", throwIfNotFound: true);
        m_Movement_BackwardDown = m_Movement.FindAction("BackwardDown", throwIfNotFound: true);
        m_Movement_BackwardUp = m_Movement.FindAction("BackwardUp", throwIfNotFound: true);
        m_Movement_LeftUp = m_Movement.FindAction("LeftUp", throwIfNotFound: true);
        m_Movement_LeftDown = m_Movement.FindAction("LeftDown", throwIfNotFound: true);
        m_Movement_RightDown = m_Movement.FindAction("RightDown", throwIfNotFound: true);
        m_Movement_RightUp = m_Movement.FindAction("RightUp", throwIfNotFound: true);
        // Mouse
        m_Mouse = asset.FindActionMap("Mouse", throwIfNotFound: true);
        m_Mouse_delta = m_Mouse.FindAction("delta", throwIfNotFound: true);
        m_Mouse_rightClickDown = m_Mouse.FindAction("rightClickDown", throwIfNotFound: true);
        m_Mouse_leftClickDown = m_Mouse.FindAction("leftClickDown", throwIfNotFound: true);
        m_Mouse_leftClickUp = m_Mouse.FindAction("leftClickUp", throwIfNotFound: true);
        m_Mouse_rightClickUp = m_Mouse.FindAction("rightClickUp", throwIfNotFound: true);
        m_Mouse_position = m_Mouse.FindAction("position", throwIfNotFound: true);
        // Misc
        m_Misc = asset.FindActionMap("Misc", throwIfNotFound: true);
        m_Misc_DevicePulse = m_Misc.FindAction("DevicePulse", throwIfNotFound: true);
        m_Misc_Dash = m_Misc.FindAction("Dash", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Movement
    private readonly InputActionMap m_Movement;
    private IMovementActions m_MovementActionsCallbackInterface;
    private readonly InputAction m_Movement_ForwardDown;
    private readonly InputAction m_Movement_ForwardUp;
    private readonly InputAction m_Movement_BackwardDown;
    private readonly InputAction m_Movement_BackwardUp;
    private readonly InputAction m_Movement_LeftUp;
    private readonly InputAction m_Movement_LeftDown;
    private readonly InputAction m_Movement_RightDown;
    private readonly InputAction m_Movement_RightUp;
    public struct MovementActions
    {
        private @MasterInput m_Wrapper;
        public MovementActions(@MasterInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @ForwardDown => m_Wrapper.m_Movement_ForwardDown;
        public InputAction @ForwardUp => m_Wrapper.m_Movement_ForwardUp;
        public InputAction @BackwardDown => m_Wrapper.m_Movement_BackwardDown;
        public InputAction @BackwardUp => m_Wrapper.m_Movement_BackwardUp;
        public InputAction @LeftUp => m_Wrapper.m_Movement_LeftUp;
        public InputAction @LeftDown => m_Wrapper.m_Movement_LeftDown;
        public InputAction @RightDown => m_Wrapper.m_Movement_RightDown;
        public InputAction @RightUp => m_Wrapper.m_Movement_RightUp;
        public InputActionMap Get() { return m_Wrapper.m_Movement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovementActions set) { return set.Get(); }
        public void SetCallbacks(IMovementActions instance)
        {
            if (m_Wrapper.m_MovementActionsCallbackInterface != null)
            {
                @ForwardDown.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnForwardDown;
                @ForwardDown.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnForwardDown;
                @ForwardDown.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnForwardDown;
                @ForwardUp.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnForwardUp;
                @ForwardUp.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnForwardUp;
                @ForwardUp.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnForwardUp;
                @BackwardDown.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnBackwardDown;
                @BackwardDown.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnBackwardDown;
                @BackwardDown.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnBackwardDown;
                @BackwardUp.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnBackwardUp;
                @BackwardUp.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnBackwardUp;
                @BackwardUp.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnBackwardUp;
                @LeftUp.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnLeftUp;
                @LeftUp.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnLeftUp;
                @LeftUp.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnLeftUp;
                @LeftDown.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnLeftDown;
                @LeftDown.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnLeftDown;
                @LeftDown.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnLeftDown;
                @RightDown.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnRightDown;
                @RightDown.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnRightDown;
                @RightDown.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnRightDown;
                @RightUp.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnRightUp;
                @RightUp.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnRightUp;
                @RightUp.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnRightUp;
            }
            m_Wrapper.m_MovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ForwardDown.started += instance.OnForwardDown;
                @ForwardDown.performed += instance.OnForwardDown;
                @ForwardDown.canceled += instance.OnForwardDown;
                @ForwardUp.started += instance.OnForwardUp;
                @ForwardUp.performed += instance.OnForwardUp;
                @ForwardUp.canceled += instance.OnForwardUp;
                @BackwardDown.started += instance.OnBackwardDown;
                @BackwardDown.performed += instance.OnBackwardDown;
                @BackwardDown.canceled += instance.OnBackwardDown;
                @BackwardUp.started += instance.OnBackwardUp;
                @BackwardUp.performed += instance.OnBackwardUp;
                @BackwardUp.canceled += instance.OnBackwardUp;
                @LeftUp.started += instance.OnLeftUp;
                @LeftUp.performed += instance.OnLeftUp;
                @LeftUp.canceled += instance.OnLeftUp;
                @LeftDown.started += instance.OnLeftDown;
                @LeftDown.performed += instance.OnLeftDown;
                @LeftDown.canceled += instance.OnLeftDown;
                @RightDown.started += instance.OnRightDown;
                @RightDown.performed += instance.OnRightDown;
                @RightDown.canceled += instance.OnRightDown;
                @RightUp.started += instance.OnRightUp;
                @RightUp.performed += instance.OnRightUp;
                @RightUp.canceled += instance.OnRightUp;
            }
        }
    }
    public MovementActions @Movement => new MovementActions(this);

    // Mouse
    private readonly InputActionMap m_Mouse;
    private IMouseActions m_MouseActionsCallbackInterface;
    private readonly InputAction m_Mouse_delta;
    private readonly InputAction m_Mouse_rightClickDown;
    private readonly InputAction m_Mouse_leftClickDown;
    private readonly InputAction m_Mouse_leftClickUp;
    private readonly InputAction m_Mouse_rightClickUp;
    private readonly InputAction m_Mouse_position;
    public struct MouseActions
    {
        private @MasterInput m_Wrapper;
        public MouseActions(@MasterInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @delta => m_Wrapper.m_Mouse_delta;
        public InputAction @rightClickDown => m_Wrapper.m_Mouse_rightClickDown;
        public InputAction @leftClickDown => m_Wrapper.m_Mouse_leftClickDown;
        public InputAction @leftClickUp => m_Wrapper.m_Mouse_leftClickUp;
        public InputAction @rightClickUp => m_Wrapper.m_Mouse_rightClickUp;
        public InputAction @position => m_Wrapper.m_Mouse_position;
        public InputActionMap Get() { return m_Wrapper.m_Mouse; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MouseActions set) { return set.Get(); }
        public void SetCallbacks(IMouseActions instance)
        {
            if (m_Wrapper.m_MouseActionsCallbackInterface != null)
            {
                @delta.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnDelta;
                @delta.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnDelta;
                @delta.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnDelta;
                @rightClickDown.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnRightClickDown;
                @rightClickDown.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnRightClickDown;
                @rightClickDown.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnRightClickDown;
                @leftClickDown.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnLeftClickDown;
                @leftClickDown.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnLeftClickDown;
                @leftClickDown.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnLeftClickDown;
                @leftClickUp.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnLeftClickUp;
                @leftClickUp.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnLeftClickUp;
                @leftClickUp.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnLeftClickUp;
                @rightClickUp.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnRightClickUp;
                @rightClickUp.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnRightClickUp;
                @rightClickUp.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnRightClickUp;
                @position.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnPosition;
                @position.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnPosition;
                @position.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnPosition;
            }
            m_Wrapper.m_MouseActionsCallbackInterface = instance;
            if (instance != null)
            {
                @delta.started += instance.OnDelta;
                @delta.performed += instance.OnDelta;
                @delta.canceled += instance.OnDelta;
                @rightClickDown.started += instance.OnRightClickDown;
                @rightClickDown.performed += instance.OnRightClickDown;
                @rightClickDown.canceled += instance.OnRightClickDown;
                @leftClickDown.started += instance.OnLeftClickDown;
                @leftClickDown.performed += instance.OnLeftClickDown;
                @leftClickDown.canceled += instance.OnLeftClickDown;
                @leftClickUp.started += instance.OnLeftClickUp;
                @leftClickUp.performed += instance.OnLeftClickUp;
                @leftClickUp.canceled += instance.OnLeftClickUp;
                @rightClickUp.started += instance.OnRightClickUp;
                @rightClickUp.performed += instance.OnRightClickUp;
                @rightClickUp.canceled += instance.OnRightClickUp;
                @position.started += instance.OnPosition;
                @position.performed += instance.OnPosition;
                @position.canceled += instance.OnPosition;
            }
        }
    }
    public MouseActions @Mouse => new MouseActions(this);

    // Misc
    private readonly InputActionMap m_Misc;
    private IMiscActions m_MiscActionsCallbackInterface;
    private readonly InputAction m_Misc_DevicePulse;
    private readonly InputAction m_Misc_Dash;
    public struct MiscActions
    {
        private @MasterInput m_Wrapper;
        public MiscActions(@MasterInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @DevicePulse => m_Wrapper.m_Misc_DevicePulse;
        public InputAction @Dash => m_Wrapper.m_Misc_Dash;
        public InputActionMap Get() { return m_Wrapper.m_Misc; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MiscActions set) { return set.Get(); }
        public void SetCallbacks(IMiscActions instance)
        {
            if (m_Wrapper.m_MiscActionsCallbackInterface != null)
            {
                @DevicePulse.started -= m_Wrapper.m_MiscActionsCallbackInterface.OnDevicePulse;
                @DevicePulse.performed -= m_Wrapper.m_MiscActionsCallbackInterface.OnDevicePulse;
                @DevicePulse.canceled -= m_Wrapper.m_MiscActionsCallbackInterface.OnDevicePulse;
                @Dash.started -= m_Wrapper.m_MiscActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_MiscActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_MiscActionsCallbackInterface.OnDash;
            }
            m_Wrapper.m_MiscActionsCallbackInterface = instance;
            if (instance != null)
            {
                @DevicePulse.started += instance.OnDevicePulse;
                @DevicePulse.performed += instance.OnDevicePulse;
                @DevicePulse.canceled += instance.OnDevicePulse;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
            }
        }
    }
    public MiscActions @Misc => new MiscActions(this);
    public interface IMovementActions
    {
        void OnForwardDown(InputAction.CallbackContext context);
        void OnForwardUp(InputAction.CallbackContext context);
        void OnBackwardDown(InputAction.CallbackContext context);
        void OnBackwardUp(InputAction.CallbackContext context);
        void OnLeftUp(InputAction.CallbackContext context);
        void OnLeftDown(InputAction.CallbackContext context);
        void OnRightDown(InputAction.CallbackContext context);
        void OnRightUp(InputAction.CallbackContext context);
    }
    public interface IMouseActions
    {
        void OnDelta(InputAction.CallbackContext context);
        void OnRightClickDown(InputAction.CallbackContext context);
        void OnLeftClickDown(InputAction.CallbackContext context);
        void OnLeftClickUp(InputAction.CallbackContext context);
        void OnRightClickUp(InputAction.CallbackContext context);
        void OnPosition(InputAction.CallbackContext context);
    }
    public interface IMiscActions
    {
        void OnDevicePulse(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
    }
}
